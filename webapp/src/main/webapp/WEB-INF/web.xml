<!DOCTYPE web-app PUBLIC
 "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"
 "http://java.sun.com/dtd/web-app_2_3.dtd" >

<web-app>
  <display-name>Archetype Created Web Application</display-name>

 	<context-param>
		<param-name>resteasy.servlet.mapping.prefix</param-name>
		<param-value>/rest</param-value>
	</context-param>	

	<filter>
		<filter-name>CORS</filter-name>
		<filter-class>web.org.perfmon4j.restdatasource.filters.CorsFilter</filter-class>
	</filter>

	<filter>
    	<filter-name>springSecurityFilterChain</filter-name>
    	<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
	</filter>	
	
	<filter-mapping>
        <filter-name>CORS</filter-name>
        <url-pattern>/rest/*</url-pattern>
	</filter-mapping>
	
	<filter-mapping>
    	<filter-name>springSecurityFilterChain</filter-name>
    	<url-pattern>/*</url-pattern>
	</filter-mapping>

	<filter-mapping>
    	<filter-name>springSecurityFilterChain</filter-name>
    	<url-pattern>/zkau/*</url-pattern>
	</filter-mapping>

	<!-- Loads the Spring application context configuration -->
	<listener>
	    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	 <!-- For using web scoped bean -->
	<listener>
	    <listener-class>org.springframework.web.context.request.RequestContextListener</listener-class>
	</listener>
	
 	<servlet>
		<servlet-name>resteasy-servlet</servlet-name>
		<servlet-class>org.jboss.resteasy.plugins.server.servlet.HttpServletDispatcher</servlet-class>
		<init-param>
			<param-name>javax.ws.rs.Application</param-name>
			<param-value>web.org.perfmon4j.restdatasource.RestApp</param-value>
		</init-param>
	</servlet>

	<servlet>
		<servlet-name>zkLoader</servlet-name>
		<servlet-class>org.zkoss.zk.ui.http.DHtmlLayoutServlet</servlet-class>

		<!-- Must. Specifies URI of the update engine (DHtmlUpdateServlet).
		It must be the same as <url-pattern> for the update engine.
		-->
		<init-param>
			<param-name>update-uri</param-name>
			<param-value>/zkau</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup><!-- Must -->
	</servlet>

	<servlet>
		<servlet-name>auEngine</servlet-name>
		<servlet-class>org.zkoss.zk.au.http.DHtmlUpdateServlet</servlet-class>
	</servlet>


	<servlet-mapping>
		<servlet-name>resteasy-servlet</servlet-name>
		<url-pattern>/rest/*</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>zkLoader</servlet-name>
		<url-pattern>*.zul</url-pattern>
	</servlet-mapping>
	
	<servlet-mapping>
		<servlet-name>zkLoader</servlet-name>
		<url-pattern>*.zhtml</url-pattern>
	</servlet-mapping>
	
	<servlet-mapping>
		<servlet-name>auEngine</servlet-name>
		<url-pattern>/zkau/*</url-pattern>
	</servlet-mapping>

	<session-config>
		<session-timeout>60</session-timeout>
	</session-config>

	<!-- [Optional] MIME mapping -->
	<mime-mapping>
		<extension>doc</extension>
		<mime-type>application/vnd.ms-word</mime-type>
	</mime-mapping>
	<mime-mapping>
		<extension>gif</extension>
		<mime-type>image/gif</mime-type>
	</mime-mapping>
	<mime-mapping>
		<extension>htm</extension>
		<mime-type>text/html</mime-type>
	</mime-mapping>
	<mime-mapping>
		<extension>html</extension>
		<mime-type>text/html</mime-type>
	</mime-mapping>
	<mime-mapping>
		<extension>jpeg</extension>
		<mime-type>image/jpeg</mime-type>
	</mime-mapping>
	<mime-mapping>
		<extension>jpg</extension>
		<mime-type>image/jpeg</mime-type>
	</mime-mapping>
	<mime-mapping>
		<extension>js</extension>
		<mime-type>text/javascript</mime-type>
	</mime-mapping>
	<mime-mapping>
		<extension>pdf</extension>
		<mime-type>application/pdf</mime-type>
	</mime-mapping>
	<mime-mapping>
		<extension>png</extension>
		<mime-type>image/png</mime-type>
	</mime-mapping>
	<mime-mapping>
		<extension>txt</extension>
		<mime-type>text/plain</mime-type>
	</mime-mapping>
	<mime-mapping>
		<extension>xls</extension>
		<mime-type>application/vnd.ms-excel</mime-type>
	</mime-mapping>
	<mime-mapping>
		<extension>xml</extension>
		<mime-type>text/xml</mime-type>
	</mime-mapping>
	<mime-mapping>
		<extension>zhtml</extension>
		<mime-type>text/html</mime-type>
	</mime-mapping>
	<mime-mapping>
		<extension>zul</extension>
		<mime-type>text/html</mime-type>
	</mime-mapping>

	<welcome-file-list>
		<welcome-file>index.html</welcome-file>
	</welcome-file-list>

<!-- !!NEVER DEPLOY INTO A PRODUCTION SYSTEM WITHOUT CONFIGURING A SECURITY CONSTRAINT!! 
-->
<!--  
	<security-constraint>
   		<web-resource-collection>
			<web-resource-name>Perfmon4jSystemConsole</web-resource-name>
			<description>Restrict access to the Perfmon4j System Console</description>
			<url-pattern>/zkau/*</url-pattern>
			<url-pattern>/app/*</url-pattern> 
		</web-resource-collection>
		<auth-constraint>
			<role-name>Perfmon4jAdmin</role-name>
		</auth-constraint>
	</security-constraint>
-->	
<!-- 
	Example of a Apache tomcat authentication realm.
 -->
<!--   
	<login-config>
    	<auth-method>BASIC</auth-method>
      	<realm-name>UserDatabaseRealm</realm-name>
	</login-config>

	<security-role>
		<role-name>Perfmon4jAdmin</role-name>
	</security-role>	
-->


<!-- 
	Example of a JBoss 7 authentication realm.
	
	To use this realm you need to add a user to the jboss ApplicationRealm
	Do this by running the jboss/bin/add-user.sh or (.bat) file.
	When prompted enter:
		ApplicationRealm - For realm type 
		Perfmon4jAdmin - For one of the users roles
 -->
<!--	
	<login-config>
    	<auth-method>BASIC</auth-method>
      	<realm-name>ApplicationRealm</realm-name>
	</login-config>

	<security-role>
		<role-name>Perfmon4jAdmin</role-name>
	</security-role>	
-->

</web-app>
